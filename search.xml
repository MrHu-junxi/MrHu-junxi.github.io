<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Express框架基本使用</title>
      <link href="/2025/02/02/Express%E6%A1%86%E6%9E%B6%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
      <url>/2025/02/02/Express%E6%A1%86%E6%9E%B6%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="express介绍"><a href="#express介绍" class="headerlink" title="express介绍"></a>express介绍</h2><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><div class="note success modern"><p>express是一个基于Node.js平台,快速开发web应用服务的框架。</p></div><h2 id="express使用"><a href="#express使用" class="headerlink" title="express使用"></a>express使用</h2><h3 id="基本使用-创建简单的本地web服务"><a href="#基本使用-创建简单的本地web服务" class="headerlink" title="基本使用-创建简单的本地web服务"></a>基本使用-创建简单的本地web服务</h3><ol><li>创建项目</li><li>安装<code>express</code>依赖<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i express</span><br></pre></td></tr></table></figure></li><li><p>引入express包</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li><p>使用express,创建http服务器对象</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>()</span><br></pre></td></tr></table></figure></li><li><p>监听对应路径的请求,使用对应函数处理请求,</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">// 服务器向客户端响应数据</span></span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">&#x27;hello world&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>处理函数中,有两个参数</li><li>req =&gt; 请求对象</li><li>res =&gt; 相应对象</li></ul></li><li>启动服务器,监听端口<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 3000为端口号</span></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">3000</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;3000端口服务启动成功....&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li>运行代码</li><li>打开浏览器,地址栏输入<code>127.0.0.1:3000</code>就可以访问本地服务器了</li></ol><h2 id="express路由"><a href="#express路由" class="headerlink" title="express路由"></a>express路由</h2><div class="note success modern"><p>什么是路由?前端访问不同地址,后端返回不同数据,这就叫后端路由。假如,<code>/users/login</code>接口是登录用的,而<code>/users/reg</code>接口是注册用的,那么监听不同路径,执行不同函数,从而来处理不同的请求。这种路由一般在app上使用,也叫应用级别路由。</p></div><h3 id="路由的简单使用"><a href="#路由的简单使用" class="headerlink" title="路由的简单使用"></a>路由的简单使用</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 路由配置</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&#x27;/home&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">&#x27;用户主页&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&#x27;/user/login&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">&#x27;用户登录页面&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&#x27;/user/reg&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">&#x27;用户注册页面&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> Nodejs </tag>
            
            <tag> Express </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于什么是Nodejs?</title>
      <link href="/2025/02/02/%E5%85%B3%E4%BA%8E%E4%BB%80%E4%B9%88%E6%98%AFNodejs/"/>
      <url>/2025/02/02/%E5%85%B3%E4%BA%8E%E4%BB%80%E4%B9%88%E6%98%AFNodejs/</url>
      
        <content type="html"><![CDATA[<h3 id="Nodejs介绍"><a href="#Nodejs介绍" class="headerlink" title="Nodejs介绍"></a>Nodejs介绍</h3><ol><li>Nodejs是一个基于v8引擎的javascrpit运行环境,可以让我们使用js开发后端或者服务端程序</li><li>特点:单线程,异步,事件驱动</li><li>Nodejs官网:<a href="https://nodejs.org/zh-cn">https://nodejs.org/zh-cn</a></li></ol><h4 id="Nodejs可以做什么"><a href="#Nodejs可以做什么" class="headerlink" title="Nodejs可以做什么?"></a>Nodejs可以做什么?</h4><ol><li>Nodejs可以解析js代码,让js脱离浏览器</li></ol><h4 id="安装Nodejs"><a href="#安装Nodejs" class="headerlink" title="安装Nodejs"></a>安装Nodejs</h4><ol><li>下载地址:<a href="https://nodejs.org/zh-cn/download">https://nodejs.org/zh-cn/download</a></li><li>下载好以后,打开安装包安装即可</li><li>地址建议用默认的,这里面换地址的坑太多了,容易出问题</li><li>安装好以后,按下<kbd>Win</kbd> + <kbd>R</kbd>,左下角输入<code>cmd</code></li><li>在终端输入<code>node -v</code>,显示版本号说明安装成功</li></ol><h4 id="运行js文件"><a href="#运行js文件" class="headerlink" title="运行js文件"></a>运行js文件</h4><ol><li>打开文件夹目录</li><li>打开终端,在js文件目录下,输入命令运行代码<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node js文件名</span><br></pre></td></tr></table></figure></li></ol><h3 id="什么是模块化开发"><a href="#什么是模块化开发" class="headerlink" title="什么是模块化开发"></a>什么是模块化开发</h3><div class="note success modern"><p>为了防止主文件过于臃肿,可以把一些功能脱离出来,形成一个新的文件,主文件中只需引入文件,就可以使用功能</p></div><h4 id="暴露模块"><a href="#暴露模块" class="headerlink" title="暴露模块"></a>暴露模块</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">module.exports = Obj</span><br></pre></td></tr></table></figure><h4 id="引入模块"><a href="#引入模块" class="headerlink" title="引入模块"></a>引入模块</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">const Obj = require(&#x27;文件路径&#x27;)</span><br></pre></td></tr></table></figure><h3 id="npm包管理器的使用"><a href="#npm包管理器的使用" class="headerlink" title="npm包管理器的使用"></a>npm包管理器的使用</h3><ol><li>进入项目文件夹</li><li>进入终端,输入以下命令,进行初始化<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init -y</span><br></pre></td></tr></table></figure></li><li>初始换之后就可以本地安装第三方包<div class="note success modern"><p>项目中需要用到的第三方模块,也叫项目依赖,也可以说是项目中依赖的模块</p></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i &#x27;包名&#x27;</span><br></pre></td></tr></table></figure></li><li>使用项目中安装的第三方模块<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">const express = require(&#x27;包名&#x27;)</span><br></pre></td></tr></table></figure></li></ol><h4 id="开发依赖nodemon"><a href="#开发依赖nodemon" class="headerlink" title="开发依赖nodemon"></a>开发依赖nodemon</h4><div class="note success modern"><p>nodemon可以帮助我们在改完代码以后不需要重新启动本地服务器</p></div><ol><li><p>安装nodemon开发依赖</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i nodemon -D</span><br></pre></td></tr></table></figure></li><li><p>使用nodemon运行文件</p><ul><li>在package.json文件scripts配置项内,配置<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;dev&quot;:&quot;nodemon 要执行的文件名&quot;</span><br></pre></td></tr></table></figure><h4 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h4></li></ul></li><li>自动检查package.json依赖自动下载<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i </span><br></pre></td></tr></table></figure></li></ol><h4 id="修改npm下载源"><a href="#修改npm下载源" class="headerlink" title="修改npm下载源"></a>修改npm下载源</h4><ul><li>直接使用npm下载速度属实太慢,建议换个国内的下载源(不管用就自己去找镜像源)</li></ul><ol><li>淘宝镜像<ul><li>npm config set registry <a href="https://registry.npm.taobao.org">https://registry.npm.taobao.org</a></li></ul></li><li>官方镜像<ul><li>npm config set registry <a href="https://registry.npmjs.org/">https://registry.npmjs.org/</a></li></ul></li><li>查看当前npm下载源<ul><li>npm config get registry</li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> Nodejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何使用Express和Js开发博客系统</title>
      <link href="/2025/02/02/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8express%E5%92%8Cjs%E5%BC%80%E5%8F%91%E5%8D%9A%E5%AE%A2%E7%B3%BB%E7%BB%9F/"/>
      <url>/2025/02/02/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8express%E5%92%8Cjs%E5%BC%80%E5%8F%91%E5%8D%9A%E5%AE%A2%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Express </tag>
            
            <tag> 博客 </tag>
            
            <tag> Js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue中的配置项</title>
      <link href="/2025/01/31/Vue%E4%B8%AD%E7%9A%84%E9%85%8D%E7%BD%AE%E9%A1%B9/"/>
      <url>/2025/01/31/Vue%E4%B8%AD%E7%9A%84%E9%85%8D%E7%BD%AE%E9%A1%B9/</url>
      
        <content type="html"><![CDATA[<h3 id="el"><a href="#el" class="headerlink" title="el"></a>el</h3><h3 id="data"><a href="#data" class="headerlink" title="data"></a>data</h3><h3 id="methods"><a href="#methods" class="headerlink" title="methods"></a>methods</h3><h3 id="components"><a href="#components" class="headerlink" title="components"></a>components</h3><h3 id="props"><a href="#props" class="headerlink" title="props"></a>props</h3><div class="note primary flat"><p>当我们要复用组件,但是组件内的数据希望改变时,可以使用在<code>App.vue</code>使用组件时,传入数据,然后在使用的组件内,通过<code>props</code>配置项接受数据</p></div><ol><li>传入数据,<code>App.vue</code>文件内<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;组件名 name=&quot;xx&quot; address=&quot;xx&quot; v-bind:age=&quot;xxx&quot;&gt;&lt;/组件名&gt;</span><br></pre></td></tr></table></figure></li><li><p>接收数据,所使用的组件文件内</p><ul><li>简单接收<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">props</span>:[<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;address&#x27;</span>,<span class="string">&#x27;age&#x27;</span>]</span><br></pre></td></tr></table></figure></li><li>限制类型接收<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">props</span>:&#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="title class_">String</span>,</span><br><span class="line">    <span class="attr">address</span>:<span class="title class_">String</span>,</span><br><span class="line">    <span class="attr">age</span>:<span class="title class_">Number</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>多层限制接收<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">props</span>:&#123;</span><br><span class="line">    <span class="attr">name</span>:&#123;</span><br><span class="line">        <span class="attr">type</span>:<span class="title class_">String</span>,</span><br><span class="line">        <span class="attr">required</span>:<span class="literal">true</span>  <span class="comment">// 必须</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">address</span>:&#123;</span><br><span class="line">        <span class="attr">type</span>:<span class="title class_">String</span>,</span><br><span class="line">        <span class="attr">required</span>:<span class="literal">true</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">age</span>:&#123;</span><br><span class="line">        <span class="attr">type</span>:<span class="title class_">Number</span>,</span><br><span class="line">        <span class="attr">default</span>:<span class="number">99</span> <span class="comment">// 默认值</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>代码演示</p></li></ol><ul><li><code>App.vue</code>中template标签内的代码<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;School name=&quot;制造&quot; address=&quot;江西&quot; v-bind:age=&quot;200&quot;&gt;&lt;/School&gt;</span><br><span class="line">    &lt;School name=&quot;现代&quot; address=&quot;江西&quot; v-bind:age=&quot;150&quot;&gt;&lt;/School&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure></li><li><code>School.vue</code>中script标签内的代码<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">      name:&#x27;School&#x27;,</span><br><span class="line">      data()&#123;</span><br><span class="line">          return &#123;</span><br><span class="line">            msg:&#x27;江西的大学&#x27;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      props:&#123;</span><br><span class="line">        name:&#123;</span><br><span class="line">            type:String,</span><br><span class="line">            required:true  // 必须</span><br><span class="line">        &#125;,</span><br><span class="line">        address:&#123;</span><br><span class="line">            type:String,</span><br><span class="line">            required:true,</span><br><span class="line">        &#125;,</span><br><span class="line">        age:&#123;</span><br><span class="line">            type:Number,</span><br><span class="line">            default:99 // 默认值</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ul><ol><li>潜在问题<ul><li>传入的值默认不允许修改</li><li>key无法作为传入的值</li></ul></li></ol><h3 id="mixin-混入-混合"><a href="#mixin-混入-混合" class="headerlink" title="mixin(混入/混合)"></a>mixin(混入/混合)</h3><div class="note primary flat"><p>当需要使用的多个组件中,拥有完全相同的功能代码,我们就可以把它抽离,写在一个混合文件中,需要使用的组件中,引入混合使用即可</p></div><ol><li>抽离相同代码,创建一个混合文件,文件内写一个对象,对象内配置相同配置项即可,代码如下<code>mixin.js</code>混合文件<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 导出混合</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> mixin = &#123;</span><br><span class="line">    <span class="attr">methods</span>:&#123;</span><br><span class="line">        <span class="title function_">showName</span>(<span class="params"></span>)&#123;</span><br><span class="line">          <span class="title function_">alert</span>(<span class="variable language_">this</span>.<span class="property">name</span>)</span><br><span class="line">        &#125;,  </span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>在组件内引入混合<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;mixin&#125; <span class="keyword">from</span> <span class="string">&#x27;../mixin&#x27;</span></span><br></pre></td></tr></table></figure></li><li>使用混合,配置<code>mixins</code>配置项,为数组类型,里面写入导入的混合即可<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mixins</span>:[mixin],</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web前端 </tag>
            
            <tag> Vue </tag>
            
            <tag> Vue2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue中的属性</title>
      <link href="/2025/01/31/Vue%E4%B8%AD%E7%9A%84%E5%B1%9E%E6%80%A7/"/>
      <url>/2025/01/31/Vue%E4%B8%AD%E7%9A%84%E5%B1%9E%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<h3 id="ref属性"><a href="#ref属性" class="headerlink" title="ref属性"></a>ref属性</h3><ol><li>我们可以通过给一个标签添加ref属性,然后通过当前实例对象/this<code>.$refs</code>获取ref所在的标签</li><li>被用来给元素或组件注册引用信息</li><li>引用在html标签上时,获取的是真实的DOM元素,但应用在组件标签上时,获取到的是,所在组件的实例对象(vc)</li><li>使用方法:<ul><li>打标识: 如:<h1 ref="xxx"></h1></li><li>获取:this.$refs.xxx</li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web前端 </tag>
            
            <tag> Vue </tag>
            
            <tag> Vue2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Vue脚手架</title>
      <link href="/2025/01/31/%E4%BD%BF%E7%94%A8Vue%E8%84%9A%E6%89%8B%E6%9E%B6/"/>
      <url>/2025/01/31/%E4%BD%BF%E7%94%A8Vue%E8%84%9A%E6%89%8B%E6%9E%B6/</url>
      
        <content type="html"><![CDATA[<h3 id="初始化脚手架"><a href="#初始化脚手架" class="headerlink" title="初始化脚手架"></a>初始化脚手架</h3><p>工具:</p><pre><code>* Node.js(记得配置以下npm淘宝镜像)</code></pre><h4 id="声明"><a href="#声明" class="headerlink" title="声明:"></a>声明:</h4><ol><li>Vue脚手架是Vue官方提供的标准化开发工具(开发平台)</li><li>vue@cli目前版本:4x(目前vue官方推荐使用Vite脚手架)</li><li>文档:<a href="https://cn.vuejs.org/guide/scaling-up/tooling.html#vite">https://cn.vuejs.org/guide/scaling-up/tooling.html#vite</a></li></ol><h4 id="安装Vue-CLI脚手架"><a href="#安装Vue-CLI脚手架" class="headerlink" title="安装Vue@CLI脚手架"></a>安装Vue@CLI脚手架</h4><ol><li><p>执行以下命令,全局安装<code>vue@cli脚手架</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g @vue/cli</span><br></pre></td></tr></table></figure><div class="note primary simple"><p>安装完之后,关闭终端,重新打开终端,输入<code>vue</code>运行,显示一些指令,说明安装成功</p></div></li><li><span class='p red'>切换到需要创建项目的目录</span>,运行以下命令创建脚手架/项目<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue create xxxx(项目名)</span><br></pre></td></tr></table></figure></li><li><p>选择需要用到的Vue版本</p><ul><li>这边看自己用的vue是什么版本,我这边用的是vue2<ul><li>babel:用于<code>ES6</code>代码语法转<code>ES5</code></li><li>eslint:用于语法检查</li></ul></li><li>选择好后,回车执行命令  <div class="note primary simple"><p>如果这个过程持续很长时间十几分钟,就检查以下重新配置npm淘宝镜像。一方面取决于所处位置的网速,另一方面其实也取决于电脑配置,只要不是特别特别老的二战老电脑,其实都可以运行</p></div></li><li>创建好之后,可以看到一个<code>xxxx</code>的文件夹说明创建成功了</li></ul></li><li><p>启动项目</p><ul><li>进入创建好的项目<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd xxxx</span><br></pre></td></tr></table></figure></li><li>启动项目<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run serve</span><br></pre></td></tr></table></figure></li><li>等待完成之后,可以看到vue给我们开启了一个本地服务器,在浏览器打开就能看见我们的项目了</li><li>按<kbd>CTRL</kbd> + <kbd>C</kbd>停止项目</li></ul></li></ol><h3 id="分析脚手架结构"><a href="#分析脚手架结构" class="headerlink" title="分析脚手架结构"></a>分析脚手架结构</h3><ol><li>配置文件<ul><li><code>.gitignore</code>文件,git的忽略文件,哪些文件不想接受git的管理,配置在此</li><li><code>babel.config.js</code>文件,babel配置文件,用于ES6 ==&gt; ES5,Vue已经配置好了,不需要我们配置什么</li><li><code>package-lock.json</code>和<code>package.json</code>文件,包版本控制文件和包的说明书</li><li><code>README.md</code>文件:项目说明文件</li></ul></li><li>src文件夹<ul><li><code>main.js</code>文件:入口文件,当执行<code>npm run serve</code>,首先运行的文件,里面会进行:<ol><li>引入vue</li><li>引入App组件,是所有组件的父组件</li><li>关闭vue的生产提示</li><li>创建vue实例对象<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 该文件是整个项目的入口文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 引入vue</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 引入App组件,它是所有组件的父组件</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 关闭vue的生产提示</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建vue实例</span></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line"><span class="comment">// 将App组件放入容器中</span></span><br><span class="line"><span class="attr">render</span>: <span class="function"><span class="params">h</span> =&gt;</span> <span class="title function_">h</span>(<span class="title class_">App</span>),</span><br><span class="line">&#125;).$mount(<span class="string">&#x27;#app&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol></li><li><code>App.vue</code>文件,父组件文件,管理所有子组件<ol><li>里面会引入其他组件</li></ol></li><li><code>assets</code>文件夹,静态资源文件夹</li><li><code>components</code>文件夹,存放所有<code>.vue</code>文件,除了App.vue以外</li></ul></li><li>public文件夹<ul><li><code>favicon.ico</code>:页面图标</li><li><code>index.html</code>:整个应用的页面<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 整队IE浏览器的特殊配置 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span>、</span><br><span class="line">    <span class="comment">&lt;!-- 开启移动端的理想视口 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width,initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 图标 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&lt;%= BASE_URL %&gt;favicon.ico&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置网页标题 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>&lt;%= htmlWebpackPlugin.options.title %&gt;<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 当浏览器不支持js时,渲染以下字符串 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">noscript</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>We&#x27;re sorry but &lt;%= htmlWebpackPlugin.options.title %&gt; doesn&#x27;t work properly without JavaScript enabled. Please enable it to continue.<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">noscript</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 容器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- built files will be auto injected --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><code>node_modules</code>文件夹<ul><li>包文件夹</li></ul></li></ol><h3 id="main-js中的render函数"><a href="#main-js中的render函数" class="headerlink" title="main.js中的render函数"></a><code>main.js</code>中的render函数</h3><div class="note primary simple"><p>当我们引入一个残缺的vue时,需要使用redder函数去渲染我们的页面</p></div><ol><li>render函数可以接受一个参数(createElement):意为创建元素<div class="note info simple"><p>createElement也是一个函数,它能创建具体元素编写具体内容</p></div></li></ol><h3 id="关闭语法检车"><a href="#关闭语法检车" class="headerlink" title="关闭语法检车"></a>关闭语法检车</h3><div class="note primary simple"><p>在<code>vue.config.js</code>的defineConfig配置项中配置<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">lintOnSave</span>:<span class="literal">false</span></span><br></pre></td></tr></table></figure></p></div><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ol><li>关于不同版本的vue:<ul><li>vue.js与vue.runtime.js的区别<ol><li>vue.js是完整版的,包含:核心功能+模板解析器</li><li>vue.runtime.js是运行版本,只包含核心功能</li></ol></li><li>因为vue.runtime.xxx.js没有模板解析器,不能使用template配置项,需要render函数收到的createElement函数去指定具体内容</li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web前端 </tag>
            
            <tag> Vue </tag>
            
            <tag> Vue2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Picgo+Vikadata搭建个人图床</title>
      <link href="/2025/01/27/PicgoVikadata%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/"/>
      <url>/2025/01/27/PicgoVikadata%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/</url>
      
        <content type="html"><![CDATA[<h2 id="PicList-Vikadata搭建个人图床"><a href="#PicList-Vikadata搭建个人图床" class="headerlink" title="PicList+Vikadata搭建个人图床"></a>PicList+Vikadata搭建个人图床</h2><ol><li>工具<ul><li>Node.js</li><li>Picgo</li><li>Vikadata</li></ul></li></ol><h3 id="安装Picgo"><a href="#安装Picgo" class="headerlink" title="安装Picgo"></a>安装Picgo</h3><div class="tag link"><a class="link-card" title="PicList" href="https://github.com/Molunerfinn/PicGo"><div class="left"><img src="https://xiaohutuku.kina.ink/img/005.webp"/></div><div class="right"><p class="text">PicList</p><p class="url">https://github.com/Molunerfinn/PicGo</p></div></a></div><h3 id="打开Picgo"><a href="#打开Picgo" class="headerlink" title="打开Picgo"></a>打开Picgo</h3><ol><li>打开以后点击插件搜索:<span class='p blue'>Vikadata</span>,点击安装。<div class="note info simpel flat"><p>如果搜索不到,就点击网址下载插件:<a href="https://github.com/kwp-lab/picgo-plugin-vikadata">https://github.com/kwp-lab/picgo-plugin-vikadata</a> ,下载完以后解压,打开Picgo,点击插件设置右上角的下载图标,导入本地插件。如果提示导入成功,重启Picgo软件。如果右上角提示npm什么的,就去下载一个版本高点的<a href="https://nodejs.org/zh-cn">Nodejs</a>,nodejs安装好以后,按下<kbd>Win</kbd> + <kbd>R</kbd>,键打开终端,输入<code>node -v</code>,显示版本号即安装完成,此时重启电脑,再次尝试安装<code>Vikadata</code>插件。</p></div></li><li>安装好以后点击图床设置能看见<span class='p red'>Vika维格表</span></li><li>点击删除左边的按钮能进入viak维格表设置<div class="img-wrap"><div class="img-bg"><img class="img" src="https://pic1.imgdb.cn/item/67972a3ad0e0a243d4f82d8d.png"/></div></div></li></ol><h3 id="Picgo绑定Vika维格表"><a href="#Picgo绑定Vika维格表" class="headerlink" title="Picgo绑定Vika维格表"></a>Picgo绑定Vika维格表</h3><ol><li>vika官网地址:<a href="https://vika.cn">https://vika.cn</a></li><li>注册登录</li><li>点击新建,点击空白维格表,名字随意<div class="img-wrap"><div class="img-bg"><img class="img" src="https://pic1.imgdb.cn/item/67977df2d0e0a243d4f834f1.png"/></div></div></li><li>点击头像,设置,绑定邮箱</li><li>点击开发者配置,点击<code>+</code>号,生成令牌,进入新建的维格表,点击上方的API<div class="img-wrap"><div class="img-bg"><img class="img" src="https://pic1.imgdb.cn/item/67977df7d0e0a243d4f834f2.png"/></div></div></li><li>点击<code>Get获取</code>勾选右上方的<code>显示API Token</code></li><li>这时有一串<code>curl</code>的字符串,这个字符串里,<code>datasheets/</code>后面到下一个/之前的东西就是维格表id,将其复制,粘贴在Picgo内维格表配置的,维格表id后</li><li>API Token就是bearer后面的内容<span class='p red'>不包括空格与后面的引号</span>,将其复制,粘贴在Picgo内维格表配置的Api Token后</li><li>字段名称随意,然后点击确认,现在我们的维格表和Picgo之间就绑定了</li></ol><h3 id="测试功能"><a href="#测试功能" class="headerlink" title="测试功能"></a>测试功能</h3><ol><li>点击上传区,将右边的换位vika维格表,我们创建的维格表</li><li>上传一张图片,将下方选择url<div class="img-wrap"><div class="img-bg"><img class="img" src="https://pic1.imgdb.cn/item/67977dfcd0e0a243d4f834f3.png"/></div></div></li><li>点击相册,这时我们的相册内就有了一张图</li><li>点击图片下方的复制,在浏览器输入复制的地址,就能访问我们上传的图</li></ol><div class="note info simpel flat"><p>大功告成</p></div>]]></content>
      
      
      <categories>
          
          <category> 图床 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图床 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue组件化编程</title>
      <link href="/2025/01/27/Vue%E7%BB%84%E4%BB%B6%E5%8C%96/"/>
      <url>/2025/01/27/Vue%E7%BB%84%E4%BB%B6%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h3 id="对组件化的理解"><a href="#对组件化的理解" class="headerlink" title="对组件化的理解"></a>对组件化的理解</h3><ol><li><p>什么是组件?</p><div class="note success moderns flat"><p>实现一个应用中局部功能代码,资源的集合</p></div></li><li><p>组件与传统模式编程的区别</p><ul><li>传统模式编写应用  <div class="img-wrap"><div class="img-bg"><img class="img" src="https://pic1.imgdb.cn/item/679ca3c8d0e0a243d4f8c376.pngs,height = 70px"/></div></div><h4 id="浅存的问题"><a href="#浅存的问题" class="headerlink" title="浅存的问题!"></a>浅存的问题!</h4><pre><code>  1. 依赖关系混乱,不太好维护      2. 代码的复用率并不高,有些时候需要我们手动&#123;% span red code,复制 %&#125;。JS内专门有一个叫&#123;% span blue code,模块化 %&#125;的技术处理此问题,但它只针对js。</code></pre></li><li>组件化编程  <div class="img-wrap"><div class="img-bg"><img class="img" src="https://pic1.imgdb.cn/item/679ca3d3d0e0a243d4f8c377.pngs,height = 70px"/></div></div>  <div class="note info moderns flat"><p>将实现一块功能的所有代码,资源封装在同一个组件中,该组件只服务于此功能,别的区域想使用同样功能,只需引入即可,组件内可以嵌套。</p></div>  <div class="img-wrap"><div class="img-bg"><img class="img" src="https://pic1.imgdb.cn/item/679ca3d6d0e0a243d4f8c379.png,height = 70px"/></div></div></li></ul></li><li><p>组件化的优势</p><ul><li>便于维护</li><li>代码复用率高</li></ul></li></ol><h3 id="非单文件组件"><a href="#非单文件组件" class="headerlink" title="非单文件组件"></a>非单文件组件</h3><ol><li><p>创建非单文件组件,需要用<code>Vue.extend()</code>API,然后传入一个配置对象</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建非单文件组件</span></span><br><span class="line"><span class="keyword">const</span> school = <span class="title class_">Vue</span>.<span class="title function_">extend</span>(&#123;</span><br><span class="line">    <span class="comment">// 结构</span></span><br><span class="line">    <span class="attr">template</span>:<span class="string">`</span></span><br><span class="line"><span class="string">            &lt;div&gt;</span></span><br><span class="line"><span class="string">                &lt;h3&gt;&#123;&#123;name&#125;&#125;&lt;/h3&gt;</span></span><br><span class="line"><span class="string">                &lt;h3&gt;&#123;&#123;address&#125;&#125;&lt;/h3&gt;</span></span><br><span class="line"><span class="string">                &lt;button @click=&quot;hello&quot;&gt;点我打招呼&lt;/button&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">        `</span>,</span><br><span class="line">    <span class="comment">// 数据</span></span><br><span class="line">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> &#123;</span><br><span class="line">                <span class="attr">name</span>:<span class="string">&#x27;制造&#x27;</span>,</span><br><span class="line">                <span class="attr">address</span>:<span class="string">&#x27;江西&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">methods</span>:&#123;</span><br><span class="line">            <span class="title function_">hello</span>(<span class="params"></span>)&#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;hello&#x27;</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">        <span class="attr">el</span>:<span class="string">&#x27;#root&#x27;</span></span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure> <div class="note info moderns flat"><p>Vue.extend()内需要写一个配置项,配置项的写法几乎与vm一致</p></div><ol><li>配置项内不需要写<code>el</code>属性,因为组件没有确定服务对象</li><li>配置项内的<code>data</code>需要写成函数式,返回值为想要的对象\</li><li><code>template</code>是模板,结构需要放在模板内,并且只能能有一个根元素</li></ol></li><li><p>注册组件</p><div class="note success moderns flat"><p>注册组件需要在vm内添加新配置项,<code>components</code>,配置项为对象型,key对应真正的组件名,值对应之前的组件名</p></div><ul><li><p>局部注册</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    <span class="attr">el</span>:<span class="string">&#x27;#root&#x27;</span>,</span><br><span class="line">    <span class="comment">// 2.注册组件（局部注册）</span></span><br><span class="line">    <span class="attr">components</span>:&#123;</span><br><span class="line">        <span class="comment">// 组件名:组件变量</span></span><br><span class="line">        school,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>全局注册</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Vue</span>.<span class="title function_">component</span>(<span class="string">&#x27;school&#x27;</span>.<span class="property">hello</span>)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>使用组件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 组件标签 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">school</span>&gt;</span><span class="tag">&lt;/<span class="name">school</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>总结</p><ul><li>Vue中使用组件的三大步骤<ol><li>创建组件</li><li>注册组件</li><li>使用组件</li></ol></li><li>如何定义一个组件  <div class="note success moderns flat"><p>使用<code>Vue.extend(options)</code>创建组件,其中options与<code>new Vue(options)</code>传入的options几乎一样</p></div>  区别如下:<pre><code>  1. el不用写,最终所有的组件都要经过vm管理,由vm决定服务与哪个容器  2. data必须写成函数式,避免组件被复用时数据存在引用关系</code></pre>  <strong><em>使用template可以配置组件结构</em></strong></li><li>如何注册组件<ol><li>局部注册:靠<code>new Vue</code>时配置<code>components</code>配置项</li><li>全局注册:靠<code>Vue,component(&#39;组件名&#39;,组件)</code></li></ol></li><li>编写组件标签<br>  &lt;组件名&gt;&lt;/组件名&gt;</li></ul></li></ol><h3 id="关于组件的几个注意点"><a href="#关于组件的几个注意点" class="headerlink" title="关于组件的几个注意点!"></a>关于组件的几个注意点!</h3><ol><li>组件名的写法:<ul><li>一个单词组成 — 建议纯小写</li><li>多个单词组成:<ol><li>段横杠连接: ‘my-school’</li><li>每个单词首字母大写: ‘MySchool’ <code>前提:需要脚手架</code></li></ol></li></ul></li><li>定义组件的简写方式<ul><li>const comp = options</li></ul></li></ol><h3 id="组件的嵌套"><a href="#组件的嵌套" class="headerlink" title="组件的嵌套"></a>组件的嵌套</h3><div class="note success info flat"><p>组件内依然可以配置<code>components</code>配置项</p></div><div class="note success info flat"><p>实际开发中,我们会配置一个app组件,由vm管理app,由app管理所有其他组件,这样开发更有助于管理</p></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-handlebars"><span class="language-xml"></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">        // 定义学生组件</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">        const zhangs = &#123;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">            template: `</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">                <span class="tag">&lt;<span class="name">h3</span>&gt;</span>学生信息<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">                <span class="tag">&lt;<span class="name">h6</span>&gt;</span>学生:</span><span class="template-variable">&#123;&#123;<span class="name">name</span>&#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">                <span class="tag">&lt;<span class="name">h6</span>&gt;</span>年龄:</span><span class="template-variable">&#123;&#123;<span class="name">age</span>&#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">            `,</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">            data()&#123;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">                return &#123;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">                    name: &#x27;张三&#x27;,</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">                    age: &#x27;20&#x27;,</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">                &#125;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">            &#125;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">        &#125;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml"></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">        // 定义学校组件</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">        const school = &#123;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">            template: `</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">                <span class="tag">&lt;<span class="name">h3</span>&gt;</span>学校信息<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">                <span class="tag">&lt;<span class="name">h6</span>&gt;</span>学校名:</span><span class="template-variable">&#123;&#123;<span class="name">name</span>&#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">                <span class="tag">&lt;<span class="name">h6</span>&gt;</span>地址:</span><span class="template-variable">&#123;&#123;<span class="name">address</span>&#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">                <span class="tag">&lt;<span class="name">student</span>&gt;</span><span class="tag">&lt;/<span class="name">student</span>&gt;</span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">            `,</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">            data()&#123;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">                return &#123;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">                    name:&#x27;现代&#x27;,</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">                    address:&#x27;江西&#x27;,</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">                &#125;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">            &#125;,</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">            components:&#123;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">                &#x27;student&#x27;:zhangs</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">            &#125;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">        &#125;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml"></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">        // 定义打招呼组件</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">        const hello = &#123;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">            template: `</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">                <span class="tag">&lt;<span class="name">h3</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">            `,</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">        &#125;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml"></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml"></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">        // 定义app组件</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">        const app = &#123;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">            template:`</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">                <span class="tag">&lt;<span class="name">hello</span>&gt;</span><span class="tag">&lt;/<span class="name">hello</span>&gt;</span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">                <span class="tag">&lt;<span class="name">school</span>&gt;</span><span class="tag">&lt;/<span class="name">school</span>&gt;</span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">            `,</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">            components:&#123;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">                school,</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">                hello</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">            &#125;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">        &#125;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml"></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml"></span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">        Vue.config.productionTip = false</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">        new Vue(&#123;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">            &#123;/* 使用app组件 */&#125;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">            template:`<span class="tag">&lt;<span class="name">app</span>&gt;</span><span class="tag">&lt;/<span class="name">app</span>&gt;</span>`,</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">            el:&#x27;#root&#x27;,</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">            &#123;/* 注册app组件 */&#125;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">            components:&#123;app&#125;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">        &#125;)</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml">    </span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h3 id="关于VueComponent"><a href="#关于VueComponent" class="headerlink" title="关于VueComponent"></a>关于VueComponent</h3><ol><li>school组件是什么?<ul><li>school本质就是一个函数,并且是一个构造函数,是由Vue.extend()生成的.</li></ul></li><li>当我们写组件标签时,vue就会帮我们生成组件标签的实例对象</li><li>每次调用Vue.extend()返回值都是一个全新的<code>VueComponent</code>!!!</li><li>关于this指向问题<ul><li>组件中:this指向<code>Vue Component</code>实例对象</li><li>new Vue()中:this指向Vue实例对象</li></ul></li><li>VueComponent实例对象,简称vc/组件实例对象,Vue实例对象,简称vm</li></ol><h3 id="一个重要的内置关系"><a href="#一个重要的内置关系" class="headerlink" title="一个重要的内置关系"></a>一个重要的内置关系</h3><div class="note success info flat"><p>VueComponent.prototype.<strong>proto</strong> === Vue.prototype,这个关系可以使组件实例对象(vc)可以访问到Vue原型上的属性方法。</p></div><p><strong><em>实例隐性原型属性,永远指向自己缔造者的原型对象</em></strong><br><div class="img-wrap"><div class="img-bg"><img class="img" src="https://pic1.imgdb.cn/item/679ca4cdd0e0a243d4f8c391.png,height = 70px"/></div></div></p><h3 id="单文件组件"><a href="#单文件组件" class="headerlink" title="单文件组件"></a>单文件组件</h3><ol><li>Vue单文件组件需要使用<code>.vue</code>作为后缀,一个文件便是一个组件</li><li>Vue单文件组件类似于.less,浏览器无法直接解析,需要借助外部工具加工<ul><li>webpack工具(比较麻烦)</li><li>Vue官方提供的脚手架</li></ul></li><li>单文件组件内首先需要写三个标签<ul><li>template — 结构标签</li><li>script — 脚本标签</li><li>style — 样式标签<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">    &lt;!-- 单文件组件School --&gt;</span><br><span class="line">&lt;!-- 三个标签 --&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">&lt;!-- 结构标签 --&gt;</span><br><span class="line">    &lt;div class=&quot;dome&quot;&gt;</span><br><span class="line">        &lt;h2&gt;学校名称:&#123;&#123; name &#125;&#125;&lt;/h2&gt;</span><br><span class="line">        &lt;h2&gt;学校名称:&#123;&#123; address &#125;&#125;&lt;/h2&gt;</span><br><span class="line">        &lt;button @click=&quot;showName&quot;&gt;点我显示学校名&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">// 脚本标签</span><br><span class="line">    // 创建组件</span><br><span class="line">    const school = Vue.extend(&#123;</span><br><span class="line">        name:&#x27;School&#x27;,</span><br><span class="line">        data:&#123;</span><br><span class="line">            name:&#x27;现代&#x27;,</span><br><span class="line">            address:&#x27;江西&#x27;,</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line">            showName()&#123;</span><br><span class="line">                alert(this.name)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    // 暴露组件</span><br><span class="line">    export &#123;school&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">/* 样式标签 */</span><br><span class="line">.dome&#123;</span><br><span class="line">    background: orange;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><div class="note success info flat"><p>组件写完以后,需要使用<span class='p red'>import</span>暴露出去</p></div></li></ul></li><li>创建<code>App.vue</code>文件,管理所有的组件</li><li>创建<code>main.js</code>文件,作为vue的入口文件,在里面导入<code>App.vue</code>并且,创建Vue实例对象(vm)</li><li>创建<code>index.html</code>文件,页面文件,准备Vue容器</li></ol>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web前端 </tag>
            
            <tag> Vue </tag>
            
            <tag> Vue2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue生命周期</title>
      <link href="/2025/01/26/Vue%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/"/>
      <url>/2025/01/26/Vue%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/</url>
      
        <content type="html"><![CDATA[<h2 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h2><div class="note danger flat"><p>Vue的生命周期,表示Vue在完成某些关键事件时间点时,所调用的函数。比如<code>mounted()</code>函数就是,Vue在完成解析模板,并且把元素<code>挂载</code>在页面上以后调用的函数,也称为生命周期函数。生命周期函数不需要写在methods配置项内,而是直接写在Vue({})配置项内。</p></div><ol><li>生命周期:<ul><li>又名:生命周期回调函数,生命周期函数,生命周期钩子。</li><li>Vue在关键时刻帮我们调用的一些特殊函数</li><li>生命周期函数的名字是固定写法</li><li>生命周期函数内的this指向Vue实例对象</li></ul></li></ol><h3 id="生命周期全流程"><a href="#生命周期全流程" class="headerlink" title="生命周期全流程"></a>生命周期全流程</h3><div class="timeline  red"><div class='timeline-item headline'>        <div class='timeline-item-title'>          <div class='item-circle'><p>生命周期挂载流程</p></div>        </div>      </div><div class='timeline-item'>        <div class='timeline-item-title'>          <div class='item-circle'><p>New Vue</p></div>        </div>        <div class='timeline-item-content'><p>最初,初始化Vue实例对象</p><ul><li>进入环节一(挂载流程)</li></ul></div>      </div><div class='timeline-item'>        <div class='timeline-item-title'>          <div class='item-circle'><p>Init Events &amp; Lifecycle</p></div>        </div>        <div class='timeline-item-content'><p>环节一:初始化生命周期和事件(如:once事件),但数据代理还未开始(也就是说vm身上此时还没有<code>_data</code>和方法)。<br>该环节结束之后Vue会调用<code>beforeCreate()</code>函数,此时无法通过vm访问到data中的数据和methods中配置的方法。</p><ul><li>进入环节二</li></ul></div>      </div><div class='timeline-item'>        <div class='timeline-item-title'>          <div class='item-circle'><p>Init injections &amp; reactivity</p></div>        </div>        <div class='timeline-item-content'><p>环节二:初始化数据监视和数据代理。<br>该环节结束之后Vue会调用<code>created()</code>函数,此时可以通过vm访问到data中的数据和methods中配置的方法。</p><ul><li>进入环节三</li></ul></div>      </div><div class='timeline-item'>        <div class='timeline-item-title'>          <div class='item-circle'><p>Has ‘el’ options?</p></div>        </div>        <div class='timeline-item-content'><p>环节三:此时会进入判断:有没有<code>el</code>配置项?<br>从此环节开始到环节五结束,Vue开始解析模板,生成虚拟dom(内存中),页面还不能显示解析好的内容!</p><div class="note danger flat"><p>Yes</p><ul><li>直接进入环节四</li></ul></div><div class="note danger flat"><p>No-当<code>vm.$mount(el)</code>调用时,才会接着往下走(当通过vm.$mount()指定el时)</p><ul><li>进入环节四</li></ul></div></div>      </div><div class='timeline-item'>        <div class='timeline-item-title'>          <div class='item-circle'><p>Has ‘template’ options?</p></div>        </div>        <div class='timeline-item-content'><p>环节四:此时依然是进入判断:判断有没有<code>template</code>(模板)配置项?</p><div class="note danger flat"><p>Yes</p><ul><li>进入环节五-Yes情况</li></ul></div><div class="note danger flat"><p>No</p><ul><li>进入环节五-No情况!</li></ul></div></div>      </div><div class='timeline-item'>        <div class='timeline-item-title'>          <div class='item-circle'><p>Compile template into render function</p></div>        </div>        <div class='timeline-item-content'><p>环节五-Yes情况:编译一个模板template到<code>render()</code>渲染函数内</p><ul><li>进入环节六</li></ul></div>      </div><div class='timeline-item'>        <div class='timeline-item-title'>          <div class='item-circle'><p>Compile el.s outerHTML as template</p></div>        </div>        <div class='timeline-item-content'><p>环节五-No情况:编译<code>el</code>的外部html,作为模板(说白了就是<code>el</code>所在的div算不算模板)。<br>此时<code>el</code>所在的div也算作模板。之后Vue会调用<code>beforeMount()</code>函数,意为开始挂载之前。此时,页面呈现未经Vue解析的Dom结构,所有对Dom的操作最终都不奏效。</p><ul><li>进入环节六</li></ul></div>      </div><div class='timeline-item'>        <div class='timeline-item-title'>          <div class='item-circle'><p>Create vm.$el and replace “el” with it</p></div>        </div>        <div class='timeline-item-content'><p>环节六:用vm身上的<code>$el</code>替换整个<code>el</code>(也就是容器内的东西)<br>此时将虚拟内存中的dom转为真实dom,插入页面。<br>此时会调用<code>mounted()</code>函数,意为挂载完毕。此时页面呈现的是经过Vue解析dom,对dom的操作有效,初始化过程结束,一般在此时进行,开启定时器,发送网络请求,订阅消息,绑定自定义事件…初始化操作<br>此时挂载流程结束</p><ul><li>进入环节七(更新流程)</li></ul></div>      </div><div class='timeline-item'>        <div class='timeline-item-title'>          <div class='item-circle'><p>Virtual DOM re-render and patch</p></div>        </div>        <div class='timeline-item-content'><p>环节七:更新流程</p><ol><li>Vue会先调用一个<code>beforeUpdate()</code>函数,意为更新数据之前,此时数据是新的,但是页面还是旧的(页面与数据未同步)。</li><li>然后才是根据新数据,生成新虚拟Dom,随后与旧的虚拟Dom进行比较,最终完成页面更新(Model =&gt; View)</li><li>之后Vue在调用<code>updated()</code>函数,此时数据是新的,页面也是新的<br>此时更新流程结束,当vm身上的<span class='p code blue'>vm.$destroy()</span>销毁函数被调用才会进入销毁流程</li></ol><ul><li>进入环节八(销毁流程)</li></ul></div>      </div><div class='timeline-item'>        <div class='timeline-item-title'>          <div class='item-circle'><p>Teardown watchers, child components and event listeners</p></div>        </div>        <div class='timeline-item-content'><p>环节七:销毁流程</p><ol><li>销毁之前,Vue会执行一个<code>BeforeDestroy()</code>函数,,此时vm中的所有data,methods,指令都是可用的，马上就会执行销毁流程,一般在此阶段,关闭定时器,取消订阅消息,解绑自定义事件…</li><li>调用完<code>BeforeDestroy()</code>后,vm会进入销毁阶段</li><li>销毁完毕,Vue会调用<code>destroyed()</code>函数。</li></ol></div>      </div><div class='timeline-item'>        <div class='timeline-item-title'>          <div class='item-circle'><p>End</p></div>        </div>        <div class='timeline-item-content'><ul><li>生命周期结束</li></ul></div>      </div></div><h3 id="关于生命周期的坑"><a href="#关于生命周期的坑" class="headerlink" title="关于生命周期的坑"></a>关于生命周期的坑</h3><ol><li>销毁问题 <div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p>在<code>BeforeDestroy()</code>函数内,虽然能访问数据,方法,</p></div></li></ol><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul><li>一共八个(四对)钩子 — 其实还有另外三个生命周期钩子<ol><li>beforeCreate()和cteated():数据监视和数据代理创建之前和创建完毕。</li><li>beforeMount()和mounted():挂载之前和挂载完毕</li><li>beforeUpdate()和updated():更新之前与更新完毕</li><li>beforeDestroy()和destroyed():销毁之前与销毁完毕</li></ol></li></ul>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web前端 </tag>
            
            <tag> Vue </tag>
            
            <tag> Vue2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue自定义指令</title>
      <link href="/2025/01/26/Vue%E6%8C%87%E4%BB%A4/"/>
      <url>/2025/01/26/Vue%E6%8C%87%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h2 id="Vue自定义指令"><a href="#Vue自定义指令" class="headerlink" title="Vue自定义指令"></a>Vue自定义指令</h2><h3 id="自定义标签语法"><a href="#自定义标签语法" class="headerlink" title="自定义标签语法"></a>自定义标签语法</h3><div class="note info modern"><p>自定义标签需要配置在<span class='p yellow'>directives</span>配置项中 </p></div><ol><li>函数式写法: <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">directives</span>:&#123;</span><br><span class="line">    <span class="title function_">fun</span>(<span class="params">element, binging</span>)&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>函数式写法可以收到两个参数<ol><li><code>element</code>:是指令所在的真实DOM元素</li><li><code>binding</code>:是一个对象,里面包含传入值,指令名,表达式…指令<br> <strong><em>binding意为绑定,作用是让我们的自定义指令与元素标签之间建立绑定关系</em></strong></li></ol></li><li>函数的调用时间<ol><li>指令与元素成功绑定时调用一次</li><li>指令所在的模板成功解析时调用一次</li></ol></li></ul></li></ol><ul><li>对象式写法:<ul><li>对象式写法需要把自定义指令写成对象形式</li><li>对象内需要写3个指定函数<ol><li><code>bind()</code>函数:指令与元素成功绑定时,调用</li><li><code>inserted()</code>函数:绑定的元素被放入页面时,调用</li><li><code>update()</code>函数:指令所在的模板重新更新时调用</li></ol></li></ul></li></ul><h3 id="关于自定义指令容易踩的坑！！！"><a href="#关于自定义指令容易踩的坑！！！" class="headerlink" title="关于自定义指令容易踩的坑！！！"></a>关于自定义指令容易踩的坑！！！</h3><ol><li>指令名问题<div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p>如果指令需要多个单词组成,最好写成<code>v-单词-单词</code>的形式,而不要用大驼峰写法。并且,在声明指令的时候,指令名需要用<code>&#39;&#39;</code>包上。</p></div></li><li>指令回调函数内,<code>this</code>指向问题<div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p>所有自定义指令内的回调函数,<code>this</code>指向都是<code>Window</code>,与我们写的是不是箭头函数没关系。</p></div></li><li>局部指令与全局指令<div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p>我们在<code>directives</code>内声明的所有指令都是<code>局部指令</code>,之后当前的容器可以使用。声明全局指令的方法与全局过滤器一样,需要在容器外面使用<code>Vue.directive(参数1,参数2)</code>声明<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Vue</span>.<span class="title function_">directive</span>(指令名, <span class="keyword">function</span>(<span class="params">element,binding</span>)&#123;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p></div></li></ol><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ol><li>定义语法<ul><li>局部  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    <span class="attr">directives</span>:&#123;</span><br><span class="line">        &lt;!-- 函数式 --&gt;</span><br><span class="line">        <span class="title function_">fun</span>(<span class="params">element,binding</span>)&#123;&#125;</span><br><span class="line">        &lt;!-- 或者 --&gt;</span><br><span class="line">        &lt;!-- 对象式 --&gt;</span><br><span class="line">        <span class="attr">object</span>:&#123;</span><br><span class="line">            <span class="title function_">binding</span>(<span class="params">element.binding</span>)&#123;&#125;,</span><br><span class="line">            <span class="title function_">inserted</span>(<span class="params">element.binding</span>)&#123;&#125;,</span><br><span class="line">            <span class="title function_">update</span>(<span class="params">element.binding</span>)&#123;&#125;,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li>全局  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 函数式 --&gt;</span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">directive</span>(fun,<span class="keyword">function</span>(<span class="params">element,binding</span>)&#123;&#125;)</span><br><span class="line">&lt;!-- 或者 --&gt;</span><br><span class="line">&lt;!-- 对象式 --&gt;</span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">directive</span>(fun,<span class="attr">object</span>:&#123;</span><br><span class="line">            <span class="title function_">binding</span>(<span class="params">element.binding</span>)&#123;&#125;,</span><br><span class="line">            <span class="title function_">inserted</span>(<span class="params">element.binding</span>)&#123;&#125;,</span><br><span class="line">            <span class="title function_">update</span>(<span class="params">element.binding</span>)&#123;&#125;,</span><br><span class="line">        &#125;)</span><br></pre></td></tr></table></figure></li></ul></li><li>对象式配置对象中常用的三个回调<ul><li>binding(element.binding){},</li><li>inserted(element.binding){},</li><li>update(element.binding){},</li><li>并不代表只有三个</li></ul></li><li>备注:<ul><li>指令定义时不加v-,但使用时要加v-</li><li>指令名多个单词要使用<code>-</code>连接,不要使用大驼峰</li></ul></li></ol><h3 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h3><details class="folding-tag" red><summary> question_1:创建自定义指令把绑定的值放大10倍 </summary>              <div class='content'>              <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">    当前的x值是:<span class="tag">&lt;<span class="name">span</span> <span class="attr">v-text</span>=<span class="string">&quot;x&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    放大10倍后x值是:<span class="tag">&lt;<span class="name">span</span> <span class="attr">v-big</span>=<span class="string">&quot;x&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;x++&quot;</span> &gt;</span>点我x+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">x</span>:<span class="number">10</span></span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">directives</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">big</span>(<span class="params">element, binding</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                element.<span class="property">innerText</span> = binding.<span class="property">value</span> * <span class="number">10</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>              </div>            </details><details class="folding-tag" red><summary> question_2:定义一个v-fbind指令可以让绑定的值默认获取焦点 </summary>              <div class='content'>              <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-fbind:value</span>=<span class="string">&quot;x&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">x</span>:<span class="number">10</span></span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">directives</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">fbind</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 指令与元素成功绑定时调用</span></span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">bind</span>(<span class="params">element,binding</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                    element.<span class="property">value</span> = binding.<span class="property">value</span></span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 指令所在的元素被插入页面被调用</span></span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">inserted</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                    element.<span class="title function_">focus</span>()</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 指令所在的模板被重新解析</span></span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">update</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                    element.<span class="property">value</span> = binding.<span class="property">value</span></span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>              </div>            </details>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web前端 </tag>
            
            <tag> Vue </tag>
            
            <tag> Vue2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly标签外挂</title>
      <link href="/2025/01/26/Butterfly%E5%A4%96%E6%8C%82%E6%A0%87%E7%AD%BE/"/>
      <url>/2025/01/26/Butterfly%E5%A4%96%E6%8C%82%E6%A0%87%E7%AD%BE/</url>
      
        <content type="html"><![CDATA[<h3 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h3><ul><li>本文档编写参考以下文档</li></ul><ol><li><a href="https://butterfly.js.org/posts/ceeb73f/">Butterfly 文档(四)标签外挂</a></li><li><a href="https://www.fomal.cc/posts/2013454d.html">Fomalhaut-Markdown语法与外挂标签汇总</a></li></ol><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><ol><li>Markdown外挂标签格式是Hexo独有格式，并不适用于其他地方</li><li>以下写法只适用于Butterfly主题，用在其他不会有效果</li></ol><h3 id="选项卡标签"><a href="#选项卡标签" class="headerlink" title="选项卡标签"></a>选项卡标签</h3><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">语法</button><button type="button" class="tab">参数配置</button><button type="button" class="tab">Code</button><button type="button" class="tab">最终效果</button></div><div class="tab-contents"><div class="tab-item-content active"><pre><code><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs %&#125; # 选项卡标签头</span><br><span class="line">&lt;!-- tab --&gt; # 分页</span><br><span class="line">输入内容</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125; # 尾</span><br></pre></td></tr></table></figure></code></pre></div><div class="tab-item-content"><ol><li>选项卡标签参数（写在tabs后面）<ol><li>name:<ul><li>选项卡标签的名称</li><li>必选</li></ul></li><li>[index]:<ul><li>默认分页索引</li><li>默认值为1</li><li>如果输入-1,则默认不选择分页</li><li>可选<br>2.分页标签参数（写在tab后面）</li></ul></li><li>Tab name:<ul><li>分页标签标题</li><li>未指定则使用选项卡标签标题后最</li><li>指定了图标，但未指定标题，则使用图标</li><li>可选</li></ul></li><li>[@icon]:<ul><li>icon图标名称</li><li>会在标题前面添加一个图标</li><li>可选</li></ul></li></ol></li></ol></div><div class="tab-item-content"><pre><code><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs 选项卡标题 [1] %&#125;</span><br><span class="line">&lt;!-- tab 分页一 @fab fa-apple-pay --&gt;</span><br><span class="line">**这是第一页**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab 分页二 --&gt;</span><br><span class="line">**这是第二页**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab 分页三 --&gt;</span><br><span class="line">**这是第三页**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure></code></pre></div><div class="tab-item-content"><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active"><i class="fab fa-apple-pay"></i>分页一</button><button type="button" class="tab">分页二</button><button type="button" class="tab">分页三</button></div><div class="tab-contents"><div class="tab-item-content active"><p><strong>这是第一页</strong></p></div><div class="tab-item-content"><p><strong>这是第二页</strong></p></div><div class="tab-item-content"><p><strong>这是第三页</strong></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="行内文本样式"><a href="#行内文本样式" class="headerlink" title="行内文本样式"></a>行内文本样式</h3><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">语法</button><button type="button" class="tab">参数配置</button><button type="button" class="tab">Code</button><button type="button" class="tab">最终效果</button></div><div class="tab-contents"><div class="tab-item-content active"><pre><code><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% 参数 文本text %&#125;</span><br></pre></td></tr></table></figure></code></pre></div><div class="tab-item-content"><ol><li>参数<ul><li>u(下划线), emp(着重号), wavy(波浪线), del(删除线), kbd(键盘样式), psw(密码样式)</li></ul></li></ol></div><div class="tab-item-content"><pre><code><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% u 我是下划线 %&#125;</span><br><span class="line">&#123;% emp 我是着重号 %&#125;</span><br><span class="line">&#123;% wavy 我是波浪线 %&#125;</span><br><span class="line">&#123;% del 我是删除线 %&#125;</span><br><span class="line">键盘:&#123;% kbd CTRL %&#125; + &#123;% kbd C %&#125;</span><br><span class="line">密码:&#123;% psw hjx1234 %&#125;</span><br></pre></td></tr></table></figure></code></pre></div><div class="tab-item-content"><p><u>我是下划线</u></p><p><emp>我是着重号</emp></p><p><wavy>我是波浪线</wavy><br><del>我是删除线</del><br>键盘:<kbd>CTRL</kbd> + <kbd>C</kbd><br>密码:<psw>hjx1234</psw></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="文本样式"><a href="#文本样式" class="headerlink" title="文本样式"></a>文本样式</h3><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">语法</button><button type="button" class="tab">参数配置</button><button type="button" class="tab">Code</button><button type="button" class="tab">最终效果</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% 标签参数 样式参数(多个参数以空格分隔), 文本 %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><ol><li>标签参数<ul><li>p(段落标签)/span(行内标签)</li></ul></li><li>字体<ul><li>logo/code</li></ul></li><li>颜色<ul><li>red, yellow, green, cyan, blue, gray</li></ul></li><li>大小<ul><li>small, h1, h2, h3, h4, large, huge, ultra</li></ul></li><li>对其方式<ul><li>center, left, right</li></ul></li></ol></div><div class="tab-item-content"><pre><code><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% span logo red h2, Hexo %&#125;</span><br><span class="line">&#123;% span code yellow h4, Butterfly %&#125;</span><br></pre></td></tr></table></figure></code></pre></div><div class="tab-item-content"><p><span class='p logo red h2'>Hexo</span><br><span class='p code yellow h4'>Butterfly</span></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="引用note"><a href="#引用note" class="headerlink" title="引用note"></a>引用note</h3><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">语法</button><button type="button" class="tab">参数配置</button><button type="button" class="tab">Code</button><button type="button" class="tab">最终效果</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 默认icon</span><br><span class="line">&#123;% note [class] [style] %&#125;Note提示块标签&#123;% endnote %&#125; </span><br><span class="line"># 外部icon</span><br><span class="line">&#123;% note [class] [icon] [style] %&#125;Note提示块标签&#123;% endnote %&#125; </span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><ol><li>class<ul><li>标识(不同标识有不同配色)default, primary, success, info, warning, danger</li><li>可选</li></ul></li><li>icon <ul><li>可配置自定义icon(只支持fontawesome图标)</li><li>可选</li></ul></li><li>style <ul><li>simple, modern, flat, disabled</li><li>可选</li></ul></li></ol></div><div class="tab-item-content"><pre><code><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note info simpel %&#125; note提示快 &#123;% endnote %&#125;</span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; simple %&#125;2025年快到了....&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></code></pre></div><div class="tab-item-content"><div class="note info simpel flat"><p>note提示快 </p></div><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>2025年快到了….</p></div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="复选框-单选按钮样式"><a href="#复选框-单选按钮样式" class="headerlink" title="复选框 / 单选按钮样式"></a>复选框 / 单选按钮样式</h3><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">语法</button><button type="button" class="tab">参数配置</button><button type="button" class="tab">Code</button><button type="button" class="tab">最终效果</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip [style], 文本(支持简单md) %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><ol><li>tip<ul><li>checkbox(复选框), radio(单选框)</li></ul></li><li>style<ul><li>样式(只适用于复选框): plus, minus, times</li><li>颜色: red, yellow, green, blue(支持自定义颜色)</li><li>可选</li></ul></li><li>checked<ul><li>默认不选,添加为选中状态</li><li>可选</li></ul></li></ol></div><div class="tab-item-content"><pre><code><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% checkbox plus yellow checked, Hexo %&#125;</span><br><span class="line">&#123;% checkbox minus red, Butterfly %&#125;</span><br><span class="line">&#123;% radio red checked, Butterfly %&#125;</span><br><span class="line">&#123;% radio red, Butterfly %&#125;</span><br></pre></td></tr></table></figure></code></pre></div><div class="tab-item-content"><div class='checkbox plus yellow checked'><input type="checkbox" checked="checked"/>            <p>Hexo</p>            </div><div class='checkbox minus red'><input type="checkbox" />            <p>Butterfly</p>            </div><div class='checkbox red checked'><input type="radio" checked="checked"/>            <p>Butterfly</p>            </div><div class='checkbox red'><input type="radio" />            <p>Butterfly</p>            </div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="时间轴"><a href="#时间轴" class="headerlink" title="时间轴"></a>时间轴</h3><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">语法</button><button type="button" class="tab">参数配置</button><button type="button" class="tab">Code</button><button type="button" class="tab">最终效果</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline title [,color] %&#125;</span><br><span class="line">&lt;!-- timeline timeTitle --&gt;</span><br><span class="line">内容</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&lt;!-- timeline timeTitle --&gt;</span><br><span class="line">内容</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&#123;% endtimeline %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><ol><li>title<ul><li>时间轴标题</li><li>可选</li></ul></li><li>color<ul><li>颜色:red, orange, yellow, green, blue, pink</li><li>可选</li></ul></li><li>timeTitle<ul><li>时间节点标题</li><li>可选</li></ul></li></ol></div><div class="tab-item-content"><pre><code><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline 此生,red %&#125;</span><br><span class="line">&lt;!-- timeline 2010 --&gt;</span><br><span class="line">小学</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&lt;!-- timeline 2025 --&gt;</span><br><span class="line">大学毕业</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&#123;% endtimeline %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></code></pre></div><div class="tab-item-content"><div class="timeline red"><div class='timeline-item headline'>        <div class='timeline-item-title'>          <div class='item-circle'><p>此生</p></div>        </div>      </div><div class='timeline-item'>        <div class='timeline-item-title'>          <div class='item-circle'><p>2010</p></div>        </div>        <div class='timeline-item-content'><p>小学</p></div>      </div><div class='timeline-item'>        <div class='timeline-item-title'>          <div class='item-circle'><p>2025</p></div>        </div>        <div class='timeline-item-content'><p>大学毕业</p></div>      </div></div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="链接卡片"><a href="#链接卡片" class="headerlink" title="链接卡片"></a>链接卡片</h3><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">语法</button><button type="button" class="tab">参数配置</button><button type="button" class="tab">Code</button><button type="button" class="tab">最终效果</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% link title, src, url %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><ol><li>title<ul><li>链接卡片标题</li></ul></li><li>src<ul><li>链接网址</li></ul></li><li>url<ul><li>标题图片</li><li>可选</li></ul></li></ol></div><div class="tab-item-content"><pre><code><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% link 亢苏公のblog, https://xiaohu.kina.ink/, https://xiaohutuku.kina.ink/img/DayHome.webp %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></code></pre></div><div class="tab-item-content"><div class="tag link"><a class="link-card" title="亢苏公のblog" href="https://xiaohu.kina.ink/"><div class="left"><img src="https://xiaohutuku.kina.ink/img/DayHome.webp"/></div><div class="right"><p class="text">亢苏公のblog</p><p class="url">https://xiaohu.kina.ink/</p></div></a></div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="行内图片-单张图片"><a href="#行内图片-单张图片" class="headerlink" title="行内图片/单张图片"></a>行内图片/单张图片</h3><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">语法</button><button type="button" class="tab">参数配置</button><button type="button" class="tab">Code</button><button type="button" class="tab">最终效果</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip url, width, height, alt, bg %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><ol><li>tip<ul><li>inlineimage(行内)/image(单张)</li></ul></li><li>url<ul><li>图片链接</li></ul></li><li>width<ul><li>图片宽度</li><li>不适配行内图片</li></ul></li><li>height<ul><li>图片高度</li><li>可选</li></ul></li><li>alt<ul><li>提示</li><li>不适配行内图片</li><li>可选</li></ul></li><li>bg<ul><li>背景占位颜色</li><li>不适配行内图片</li><li>可选</li></ul></li></ol></div><div class="tab-item-content"><pre><code><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">你好:&#123;% inlineimage https://xiaohutuku.kina.ink/img/DayHome.webp, height = 20px %&#125;</span><br><span class="line">&#123;% image https://xiaohutuku.kina.ink/img/DayHome.webp, height = 100px, alt = &#x27;甘雨&#x27;, bg = #1D0C04 %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></code></pre></div><div class="tab-item-content"><p>你好:<img no-lazy class="inline" src="https://xiaohutuku.kina.ink/img/DayHome.webp" style="height:1.5em"/></p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://xiaohutuku.kina.ink/img/DayHome.webp"/></div></div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h3><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">语法</button><button type="button" class="tab">参数配置</button><button type="button" class="tab">Code</button><button type="button" class="tab">最终效果</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% video src %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><ol><li>src<ul><li>视频链接</li></ul></li></ol></div><div class="tab-item-content"><pre><code><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% video blob:https://www.bilibili.com/260ce2c2-323d-4d2e-99ea-e5495ba2e66a %&#125;</span><br></pre></td></tr></table></figure></code></pre></div><div class="tab-item-content"><div class="video"><video controls preload><source src='blob:https://www.bilibili.com/260ce2c2-323d-4d2e-99ea-e5495ba2e66a' type='video/mp4'>Your browser does not support the video tag.</video></div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="图库-照片"><a href="#图库-照片" class="headerlink" title="图库/照片"></a>图库/照片</h3><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">语法</button><button type="button" class="tab">参数配置</button><button type="button" class="tab">Code</button><button type="button" class="tab">最终效果</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">图库:&#123;% galleryGroup title description link img-url %&#125;</span><br><span class="line">图片:&#123;% gallery %&#125; markdown格式图片 &#123;% endgallery %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><ol><li>title<ul><li>标题</li></ul></li><li>description<ul><li>描述</li></ul></li><li>link<ul><li>链接</li></ul></li><li>img-url<ul><li>封面</li></ul></li></ol></div><div class="tab-item-content"><pre><code><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;gallery-group-main&quot;&gt;&#123;% galleryGroup Blog, 博客, #, https://xiaohutuku.kina.ink/img/DayHome.webp %&#125;&lt;/div&gt;</span><br><span class="line">&#123;% gallery %&#125; ![](https://xiaohutuku.kina.ink/img/DayHome.webp) &#123;% endgallery %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></code></pre></div><div class="tab-item-content"><div class="gallery-group-main"><figure class="gallery-group">    <img class="gallery-group-img no-lightbox" src='https://xiaohutuku.kina.ink/img/DayHome.webp' alt="Group Image Gallery">    <figcaption>      <div class="gallery-group-name">Blog,</div>      <p>博客,</p>      <a href='#,'></a>    </figcaption>  </figure></div><div class="gallery-container" data-type="data" data-button="" data-limit="10" data-first="10">    <div class="gallery-items">[{"url":"https://xiaohutuku.kina.ink/img/DayHome.webp","alt":"","title":""}]</div>  </div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="折叠框"><a href="#折叠框" class="headerlink" title="折叠框"></a>折叠框</h3><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">语法</button><button type="button" class="tab">参数配置</button><button type="button" class="tab">Code</button><button type="button" class="tab">最终效果</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% folding state color, title %&#125; Hello world!!! &#123;% endfolding %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><ol><li>state<ul><li>默认状态: open(打开)</li></ul></li><li>color<ul><li>颜色: red, orange, yellow …</li></ul></li><li>title <ul><li>折叠框标题</li></ul></li></ol></div><div class="tab-item-content"><pre><code><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% folding yellow, fold %&#125; Hello World &#123;% endfolding %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></code></pre></div><div class="tab-item-content"><details class="folding-tag" yellow><summary> fold </summary>              <div class='content'>              <p>Hello World </p>              </div>            </details></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="诗词"><a href="#诗词" class="headerlink" title="诗词"></a>诗词</h3><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">语法</button><button type="button" class="tab">参数配置</button><button type="button" class="tab">Code</button><button type="button" class="tab">最终效果</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% poem title, author %&#125; 诗词 &#123;% endpoem %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><ol><li>title<ul><li>标题</li></ul></li><li>author<ul><li>作者</li></ul></li></ol></div><div class="tab-item-content"><pre><code><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% poem 滕王阁序, 王勃 %&#125; 落霞与孤鹜齐飞,秋水共长天一色。 &#123;% endpoem %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></code></pre></div><div class="tab-item-content"><div class='poem'><div class='poem-title'>滕王阁序</div><div class='poem-author'> 王勃</div><p>落霞与孤鹜齐飞,秋水共长天一色。 </p></div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="交互注释"><a href="#交互注释" class="headerlink" title="交互注释"></a>交互注释</h3><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">语法</button><button type="button" class="tab">参数配置</button><button type="button" class="tab">Code</button><button type="button" class="tab">最终效果</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% nota label , text %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><ol><li>label<ul><li>注释内容</li></ul></li><li>text <ul><li>交互显示内容</li></ul></li></ol></div><div class="tab-item-content"><pre><code><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% nota 把鼠标移动到我上面试试 ,可以看到注解内容出现在顶栏 %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></code></pre></div><div class="tab-item-content"><p><span class='nota' data-nota='可以看到注解内容出现在顶栏'>把鼠标移动到我上面试试</span></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="气泡注释"><a href="#气泡注释" class="headerlink" title="气泡注释"></a>气泡注释</h3><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">语法</button><button type="button" class="tab">参数配置</button><button type="button" class="tab">Code</button><button type="button" class="tab">最终效果</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bubble content , notation ,background-color %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><ol><li>content<ul><li>注释内容</li></ul></li><li>notation<ul><li>悬浮显示的注释内容</li></ul></li><li>background-color<ul><li>旗袍背景色</li><li>可选</li></ul></li></ol></div><div class="tab-item-content"><pre><code><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bubble 世界你好 , Hellow %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></code></pre></div><div class="tab-item-content"><p><span class="bubble-content">世界你好 </span><span class="bubble-notation"><span class="bubble-item" style="background-color:#71a4e3;"> Hellow</span>&lt;/span&gt;</p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div>]]></content>
      
      
      <categories>
          
          <category> Butterfly主题美化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Butterfly主题美化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo搭建博客</title>
      <link href="/2025/01/26/Hexo%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2/"/>
      <url>/2025/01/26/Hexo%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<!-- Hexo博客部署(一) --><h3 id="Tools"><a href="#Tools" class="headerlink" title="Tools"></a>Tools</h3><ul><li>Node.js</li><li>Hexo</li><li>Github</li><li>Git</li></ul><h3 id="Node-js下载"><a href="#Node-js下载" class="headerlink" title="Node.js下载"></a>Node.js下载</h3><ol><li>尽量下载旧些的版本,不然后续可能遇到以下坑(本人使用v12.19.0):<a href="https://nodejs.org/download/release/v12.19.0/">https://nodejs.org/download/release/v12.19.0/</a></li><li>点击后缀<code>x64.msi</code>文件下载</li><li>安装包下载好后打开安装即可</li><li>安装一直点下一步就行,地址尽量用默认的</li><li>安装好后,按<code>WIN + R</code>,左下角输入<code>cmd</code>,进入CMD窗口,输入命令<br> <code>node -v</code><br> 输入完显示node版本,node就算是安装好了</li><li>配置npm镜像,继续在终端输入已下命令:<br> <code>npm config set registry https://registry.npmmirror.com</code></li></ol><h3 id="Hexo下载"><a href="#Hexo下载" class="headerlink" title="Hexo下载"></a>Hexo下载</h3><ol><li>继续在终端输入命令:<br> <code>npm install -g hexo-cli</code></li></ol><ul><li>如果显示报错,输入以下命令查看npm配置的镜像是不是上面配置的镜像:<br>  <code>npm config get registry</code><br>  如果镜像不是,就重新配置一下,如果镜像对了,就自己去网上找一个镜像地址配置上</li></ul><ol><li>下载完以后输入以下命令测试<br> <code>hexo -v</code><br> 如果显示版本说明下载没问题</li></ol><h3 id="Github仓库创建"><a href="#Github仓库创建" class="headerlink" title="Github仓库创建"></a>Github仓库创建</h3><ol><li>Github地址:<a href="https://github.com/,打不开的话开个代理,没有的可以试试`Watt">https://github.com/,打不开的话开个代理,没有的可以试试`Watt</a> ToolKit`加速</li><li>没有账号创建一个,进入之后,点击右上角的<code>+</code>号,点击<code>New repository</code>创建项目</li><li>仓库名称必须是<strong><em>用户名.github.io</em></strong>,勾选public,点击最下面的创建按钮,创建完成就可以了</li></ol><h3 id="Git下载"><a href="#Git下载" class="headerlink" title="Git下载"></a>Git下载</h3><ol><li>直接到官网下载即可:<a href="https://git-scm.com/downloads/win">https://git-scm.com/downloads/win</a> ,下载完以后跟着安装</li><li>安装完成以后,右键查看有没有<code>Open Git Bush Here</code>的按钮,有就说明安装好了</li><li>点击<code>Open Git Bush Here</code>打开GitBush窗口</li><li>配置用户名和邮箱<br> <code>git config --global user.name &quot;输入你的用户名&quot; git config --global user.name &quot;输入你的邮箱&quot;</code><br><strong><em>邮箱使用注册github的邮箱</em></strong></li><li>输入以下命令检查<br> <code>git config -l</code></li></ol><h3 id="连接Github"><a href="#连接Github" class="headerlink" title="连接Github"></a>连接Github</h3><ol><li>输入以下命令,生成SSH公钥<br> <code>ssh-keygen -t rsa -C &quot;你的邮箱&quot;</code></li><li>终端显示一个框框里面一堆乱码说明设置成功<br> <strong><em>如果设置没成功,检查c盘中的用户文件夹内的用户名文件夹是否为中文,该文件夹不能为中文</em></strong></li><li>打开c/用户/用户名文件夹/.ssh/内有两个文件</li><li>用记事本打开<code>.pub</code>为后缀的文件,全选,复制文件内的内容</li><li>打开Github,点击右上角的头像,点击setting按钮</li><li>找到<code>SSH and GPG keys</code>选项,点击<code>New SSH key</code>添加key,名字随意,地址粘贴上刚刚复制的公钥</li><li>测试连接,输入以下命令<br> <code>ssh -T git@github.com</code><br> 结尾出现<code>shell access的单词说明成功了</code><br><strong><em>如果失败,把Watt ToolKit关掉,打开网络代理</em></strong></li></ol><h3 id="初始化Hexo项目"><a href="#初始化Hexo项目" class="headerlink" title="初始化Hexo项目"></a>初始化Hexo项目</h3><ol><li>新建文件夹存放博客内容,右键打开<code>GitBush</code>窗口</li><li>输入命令,初始化项目<br> <code>hexo init blog-demo</code></li><li>输入命令安装依赖<br> <code>npm i</code></li><li>输入命令启动项目<br> <code>hexo s</code></li><li>启动之后会给我们一个地址,点击地址,进入浏览器,出现页面说明本地部署成功,<code>CTRL + C</code>停止本地部署<br><strong><em>也可以在浏览器直接输入<a href="http://localhost:4000/访问">http://localhost:4000/访问</a></em></strong><br><strong><em>如果打开显示404,那就是你创建仓库时,仓库名没有和用户名一样,改一下仓库名就好了</em></strong></li></ol><h3 id="挂载GitHub-Pages"><a href="#挂载GitHub-Pages" class="headerlink" title="挂载GitHub Pages"></a>挂载GitHub Pages</h3><ol><li>输入以下命令,安装部署所需依赖<br> <code>npm install hexo-deployer-git --save</code></li><li>用vscode打开配置文件<code>_config.yml</code>,划到最下面找到<code>deploy</code>配置项</li><li>用一下代码替换<code>deploy</code>配置项<br> `<br> deploy:<pre><code> type: git repository: git@github.com:MrHu-junxi/MrHu-junxi.github.io branch: main</code></pre> `<br>用户名和仓库名替换为自己的</li><li><code>GitBush</code>窗口输入以下指令,删除,上传,生成<br> <code>hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy</code></li></ol><h3 id="报错解决方法"><a href="#报错解决方法" class="headerlink" title="报错解决方法"></a>报错解决方法</h3><ol><li>使用<code>hexo d</code>时出现<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Please make sure you have the correct access rights</span><br><span class="line">and the repository exists.</span><br><span class="line">FATAL Something&#x27;s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html</span><br></pre></td></tr></table></figure><div class="img-wrap"><div class="img-bg"><img class="img" src=",height = 70px"/></div></div></li></ol><ul><li>解决方法<br>  方法1. 换一个网络代理试试<br>  方法2. 删除<code>.ssh</code>文件夹中的所以文件,重现与Github建立连接</li></ul>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
